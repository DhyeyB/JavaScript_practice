name: Pull Request Post-Commit Hook

on:
  pull_request:
    types:
      - opened
      - synchronize

jobs:
  post_commit:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run Post-Commit Hook
        run: |
          # Replace this with the actual command to run your post-commit script
          ./post-commit.sh
          if [ $? -ne 0 ]; then
            echo "Failure detected."
            echo "failure=true" >> $GITHUB_ENV
          fi
      #   continue-on-error: true

      # - name: Set Failure Flag
      #   id: failure-flag
      #   run: |
      #     if [ "${{ failure() }}" == "true" ]; then
      #       echo "::set-output name=failure::true"
      #     fi
      #   # run: echo "::set-output name=failure::true"
      #   # when: ${{ failure() }}

  check_merge:
    runs-on: ubuntu-latest
    needs: post_commit
    steps:
      - name: Check Post-Commit Script Status
        run: |
          if [ "${{ env.failure }}" == "true" ]; then
            echo "Post-Commit Script Failed. Preventing Merge."
            exit 1
          fi

#  check_merge:
#    runs-on: ubuntu-latest
#    needs: post_commit
#    steps:
#      - name: Check Post-Commit Script Status
#        run: |
#          if [ "${{ needs.post_commit.outputs.failure }}" == "true" ]; then
#            echo "Post-Commit Script Failed. Preventing Merge."
#            exit 1
#          fi



#name: Post-Commit Hook

#on:
#  push:
#    branches:
#      - main

#jobs:
#  post_commit:
#    runs-on: ubuntu-latest

#   steps:
#      - name: Checkout code
#        uses: actions/checkout@v2

#      - name: Run Post-Commit Hook
#        run: |
          # Replace this with the actual command to run your post-commit script
#          ./post-commit.sh
